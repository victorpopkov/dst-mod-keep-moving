name: Documentation

on:
  push:
    branches:
      - master

jobs:
  production:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set a job-wide environment variables
        run: |
          echo "::set-env name=BRANCH_NAME::${GITHUB_REF##*/}"
          echo '::set-env name=GITHUB_JOB_NAME::production'
      - name: Generate documentation
        uses: docker://viktorpopkov/dst-mod:alpine
        with:
          args: make ldoc
      - name: Add Docker certificates to access the remote host
        run: |
          mkdir -p "${DOCKER_CERT_PATH}"
          echo "${DOCKER_TLS_CA}" > "${DOCKER_CERT_PATH}/ca.pem"
          echo "${DOCKER_TLS_CERT}" > "${DOCKER_CERT_PATH}/cert.pem"
          echo "${DOCKER_TLS_KEY}" > "${DOCKER_CERT_PATH}/key.pem"
          chmod 400 "${DOCKER_CERT_PATH}/ca.pem"
          chmod 400 "${DOCKER_CERT_PATH}/cert.pem"
          chmod 400 "${DOCKER_CERT_PATH}/key.pem"
        env:
          DOCKER_CERT_PATH: /home/runner/.docker/deploy/
          DOCKER_TLS_CA: ${{ secrets.DEPLOY_DOCKER_TLS_CA }}
          DOCKER_TLS_CERT: ${{ secrets.DEPLOY_DOCKER_TLS_CERT }}
          DOCKER_TLS_KEY: ${{ secrets.DEPLOY_DOCKER_TLS_KEY }}
      - name: Build Docker image
        working-directory: ./doc/
        run: |
          docker build --tag "${DOCKER_IMAGE}:${DOCKER_IMAGE_TAG}" .
          echo "::set-env name=DOCKER_IMAGE::${DOCKER_IMAGE}"
          echo "::set-env name=DOCKER_IMAGE_TAG::${DOCKER_IMAGE_TAG}"
        env:
          DOCKER_CERT_PATH: /home/runner/.docker/deploy/
          DOCKER_HOST: tcp://codedsolar.com:2376
          DOCKER_IMAGE: victorpopkov/dst-mod-keep-moving/doc
          DOCKER_IMAGE_TAG: latest
          DOCKER_TLS_VERIFY: 1
      - name: Deploy Docker Stack
        working-directory: ./doc/
        run: |
          docker stack rm "${DOCKER_STACK_NAME}"
          docker stack deploy --with-registry-auth --resolve-image=always --compose-file=docker-stack.yml --prune "${DOCKER_STACK_NAME}"
        env:
          DOCKER_CERT_PATH: /home/runner/.docker/deploy/
          DOCKER_HOST: tcp://codedsolar.com:2376
          DOCKER_STACK_NAME: github_dst_mod_keep_moving_doc
          DOCKER_STACK_TRAEFIK_HOST: github.victorpopkov.com
          DOCKER_STACK_TRAEFIK_NAME: github-dst-mod-keep-moving-doc
          DOCKER_STACK_TRAEFIK_PATH_PREFIX: /dst-mod-keep-moving/
          DOCKER_TLS_VERIFY: 1
      - name: Prepare success Slack notification
        if: success()
        run: echo "::set-env name=SLACK_CUSTOM_PAYLOAD::${SLACK_CUSTOM_PAYLOAD}"
        env:
          SLACK_CUSTOM_PAYLOAD: '{"channel":"dst-mod-keep-moving","attachments":[{"color":"#2eb886","fallback":"GitHub Actions {{ GITHUB_WORKFLOW }} workflow {{ GITHUB_JOB_NAME }} job of {{ GITHUB_REPOSITORY }}@{{ BRANCH_NAME }} by {{ GITHUB_ACTOR }} has passed","blocks":[{"type":"section","text":{"type":"mrkdwn","text":"GitHub Actions *<https://github.com/{{ GITHUB_REPOSITORY }}/actions/runs/{{ GITHUB_RUN_ID }}|{{ GITHUB_WORKFLOW }}>* workflow *{{ GITHUB_JOB_NAME }}* job of *<https://github.com/{{ GITHUB_REPOSITORY }}|{{ GITHUB_REPOSITORY }}>@<https://github.com/{{ GITHUB_REPOSITORY }}/tree/{{ BRANCH_NAME }}|{{ BRANCH_NAME }}>* by *{{ GITHUB_ACTOR }}* has passed"}}]}]}'
      - name: Prepare failure Slack notification
        if: failure()
        run: echo "::set-env name=SLACK_CUSTOM_PAYLOAD::${SLACK_CUSTOM_PAYLOAD}"
        env:
          SLACK_CUSTOM_PAYLOAD: '{"channel":"dst-mod-keep-moving","attachments":[{"color":"#ed2f00","fallback":"GitHub Actions {{ GITHUB_WORKFLOW }} workflow {{ GITHUB_JOB_NAME }} job of {{ GITHUB_REPOSITORY }}@{{ BRANCH_NAME }} by {{ GITHUB_ACTOR }} has failed","blocks":[{"type":"section","text":{"type":"mrkdwn","text":"GitHub Actions *<https://github.com/{{ GITHUB_REPOSITORY }}/actions/runs/{{ GITHUB_RUN_ID }}|{{ GITHUB_WORKFLOW }}>* workflow *{{ GITHUB_JOB_NAME }}* job of *<https://github.com/{{ GITHUB_REPOSITORY }}|{{ GITHUB_REPOSITORY }}>@<https://github.com/{{ GITHUB_REPOSITORY }}/tree/{{ BRANCH_NAME }}|{{ BRANCH_NAME }}>* by *{{ GITHUB_ACTOR }}* has failed"}}]}]}'
      - name: Send Slack notification
        if: always()
        uses: Ilshidur/action-slack@master
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_CODEDSOLAR }}
